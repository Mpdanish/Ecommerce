<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Wishlist</title>
    <!-- <link
      href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.css"
      rel="stylesheet"
    /> -->
    <link
      href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <style>
      .flex-grow {
        flex-grow: 1;
      }
      #bckbtn:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      }

      /* Button transition */
      #bckbtn {
        transition: all 0.3s ease-in-out;
      }
    </style>
  </head>

  <body>
    <nav class="bg-white border-gray-200 dark:bg-gray-900">
      <div
        class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
      >
        <a href="#" class="flex items-center space-x-3 rtl:space-x-reverse">
          <img
            src="/images/electronic-store-logo.svg"
            class="h-8"
            alt="OtronMart Logo"
          />
        </a>

        <div
          class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1"
          id="navbar-search"
        >
          <ul
            class="flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
          >
            <li>
              <a
                href="/"
                class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500"
                aria-current="page"
                >Home</a
              >
            </li>
            <li>
              <a
                href="#"
                class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700"
                >Product</a
              >
            </li>

            <li>
              <a
                href="/cart"
                class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700"
                >Cart</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div
      class="flex-grow mx-auto container px-4 md:px-6 2xl:px-0 flex justify-center items-center"
    >
      <% if (wishlist.length>0) { %>

      <div class="flex flex-col jusitfy-start items-start mt-12">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-x-8 mb-12">
          <% for( let i = 0; i < wishlist.length; i++ ) { %>

          <div class="flex flex-col image-container">
            <div class="relative">
              <img
                id="example-image"
                class=" lg:block max-w-full h-auto mx-auto lg:mx-0"
                src="<%= wishlist[0].productsDetails.images[0] %>"
                alt="shoes"
              />
              <button
                onclick="removeFromWishlist('<%= wishlist[0].products.productId %>')"
                aria-label="close"
                class="top-4 right-4 focus:outline-none focus:ring-2 focus:ring-offset-2 dark:bg-white dark:text-gray-800 focus:ring-gray-800 absolute p-1.5 bg-gray-800 text-white hover:text-gray-400"
              >
                <img
                  class="dark:hidden"
                  src="https://tuk-cdn.s3.amazonaws.com/can-uploader/wishlist-1-svg1.svg"
                  alt="close"
                />
                <img
                  class="hidden dark:block"
                  src="https://tuk-cdn.s3.amazonaws.com/can-uploader/wishlist-1-svg1dark.svg"
                  alt="close"
                />
              </button>
            </div>
            <div class="mt-6 justify-between items-center">
              <div class="flex justify-center items-center mb-4">
                <p
                  class="tracking-tight text-2xl font-semibold leading-6 text-gray-800"
                >
                <%= wishlist[0].productsDetails.name %>
                </p>
              </div>
              <div class="flex justify-center items-center mb-4">
                <p
                  class="tracking-tight text-2xl font-semibold leading-6 text-gray-800"
                >
                â‚¹ <%= wishlist[0].productsDetails.price %>
                </p>
              </div>
              <div
                class="flex jusitfy-between flex-col lg:flex-row items-center mt-10 w-full space-y-4 lg:space-y-0 lg:space-x-4 xl:space-x-8"
              >
                <div class="w-full">
                  <a href="/product/<%= wishlist[0].productsDetails._id %>">
                  <button
                    class="focus:outline-none focus:ring-gray-800 focus:ring-offset-2 focus:ring-2 text-gray-800 w-full tracking-tight py-4 text-lg leading-4 hover:bg-gray-300 hover:text-gray-800 border border-gray-800 dark:bg-transparent dark:hover:bg-gray-800 dark:hover:text-white"
                  >
                    More information
                  </button></a>
                </div>
                <div class="w-full">
                  <button
                    onclick="addToCart('<%= wishlist[0].productsDetails._id %>')"
                    class="focus:outline-none focus:ring-gray-800 focus:ring-offset-2 focus:ring-2 text-white w-full tracking-tight py-4 text-lg leading-4 hover:bg-black bg-gray-800 border border-gray-800 dark:bg-white dark:text-gray-900 dark:hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white"
                  >
                    Add to cart
                  </button>
                </div>
              </div>
            </div>
          </div>

          <% } %>
        </div>
      </div>
      <% } else { %>
      <div class="flex justify-center items-center h-screen flex-grow">
        <div class="text-center">
          <!-- Text -->
          <p
            class="text-gray-700 mb-4 font-semibold text-4xl leading-snug tracking-wide"
          >
            Add Products to Wishlist
          </p>
          <!-- Button to home page -->
          <a
            href="/"
            id="bckbtn"
            class="inline-block px-4 py-2 bg-gray-800 text-white rounded-md shadow-md hover:bg-gray-700 transition duration-300 ease-in-out"
            >Go to Home</a
          >
        </div>
      </div>

      <% } %>
    </div>

    <footer
      class="bg-gray-800 text-white p-4 text-center mt-8 fixed bottom-0 w-full"
    >
      <p>
        &copy;
        <script>
          document.write(new Date().getFullYear());
        </script>
        OtronMart E-Commerce. All rights reserved.
      </p>
    </footer>

    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.js"></script> -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script
    src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.4/axios.min.js"
    integrity="sha512-ANd7ZJmixP2T0hxOP4bS6hkci01fxyrQSyRdaY7IsWq1WlKsD0WwWBDVDZbnMR7CJZVKCTkDx/q5D5n2C2C+vg=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  ></script>
    <script>
      function removeImage() {
        const divToRemove = document.querySelector(".image-container");
        divToRemove.remove();
      }
      handleClick1 = (flag) => {
        let icon = document.getElementById("chevronDown1");
        let icon2 = document.getElementById("chevronUp1");
        let menu = document.getElementById("menu1");
        if (flag) {
          menu.classList.toggle("hidden");
          icon.classList.toggle("hidden");
          icon2.classList.toggle("hidden");
        }
      };

      handleClick2 = (flag) => {
        let icon = document.getElementById("chevronDown2");
        let icon2 = document.getElementById("chevronUp2");
        let menu = document.getElementById("menu2");
        if (flag) {
          menu.classList.toggle("hidden");
          icon.classList.toggle("hidden");
          icon2.classList.toggle("hidden");
        }
      };

      handleClick3 = (flag) => {
        let icon = document.getElementById("chevronDown3");
        let icon2 = document.getElementById("chevronUp3");
        let menu = document.getElementById("menu3");
        if (flag) {
          menu.classList.toggle("hidden");
          icon.classList.toggle("hidden");
          icon2.classList.toggle("hidden");
        }
      };
      function addToCart(id) {
        axios
          .post("/api/addtocart", { id })
          .then((response) => {
            // console.log(response.data);
            // Check if the product was successfully added or already exists
            if (response.data.message === "Product already in cart") {
              const Toast = Swal.mixin({
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                  toast.onmouseenter = Swal.stopTimer;
                  toast.onmouseleave = Swal.resumeTimer;
                },
              });
              Toast.fire({
                icon: "success",
                title: "Product Already In Cart",
              });
              // Redirect the user to the cart page
              window.location.href = "/cart";
            } else if (response.data.message === "Please Login") {
              window.location.href = "/login";
            } else {
              const Toast = Swal.mixin({
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                  toast.onmouseenter = Swal.stopTimer;
                  toast.onmouseleave = Swal.resumeTimer;
                },
              });
              Toast.fire({
                icon: "success",
                title: "Product Added To Cart",
              });
              // console.log(response.data.message);
            }
          })
          .catch((error) => {
            // Handle error, log to console for simplicity
            console.error("Error:", error);
          });
      }

      function removeFromWishlist(id) {
        axios
          .delete("/removeFromWishlist", { id })
          .then((response) => {
            const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              },
            });
            Toast.fire({
              icon: "success",
              title: "Product Removed From Wishlist",
            });
            // console.log(response.data.message);
            window.location.reload();
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      }
    </script>
  </body>
</html>
