<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Products</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.0/flowbite.min.css" rel="stylesheet" />
  <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="bg-gray-100 font-sans flex flex-col min-h-screen">
  <nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
      <a href="#" class="flex items-center space-x-3 rtl:space-x-reverse">
        <img src="/images/electronic-store-logo.svg" class="h-8" alt="OtronMart Logo" />
      </a>
      <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-search">
        <ul
          class="flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
          <li>
            <a href="/"
              class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500"
              aria-current="page">Home</a>
          </li>
          <li>
            <a href="#"
              class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Product</a>
          </li>
          <li>
            <a href="/cart"
              class="block py-2 px-3 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Cart</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="flex-grow">
    <div class="bg-white">
      <div>
        <div class="relative z-40 lg:hidden" role="dialog" aria-modal="true"></div>
        <div class="fixed inset-0 z-40 flex  lg:hidden">
          <div
            class="relative ml-auto flex 1h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl">
            <div class="flex items-center justify-between px-4">
              <h2 class="text-lg font-medium text-gray-900">Filters</h2>
              <button type="button"
                class="-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400">
                <span class="sr-only">Close menu</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                  aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>



            <!-- Filters -->
            <form class="mt-4 border-t border-gray-200">
              <h3 class="sr-only">Categories</h3>
              <% for( let i=0; i < category.length; i++ ) { %>
                <ul role="list" class="px-2 py-3 font-medium text-gray-900">
                  <li>
                    <a href="#" class="block px-2 py-3">
                      <%= category[i].name %>
                    </a>
                  </li>
                  <!-- <li>
                  <a href="#" class="block px-2 py-3">Backpacks</a>
                </li>
                <li>
                  <a href="#" class="block px-2 py-3">Travel Bags</a>
                </li>
                <li>
                  <a href="#" class="block px-2 py-3">Hip Bags</a>
                </li>
                <li>
                  <a href="#" class="block px-2 py-3">Laptop Sleeves</a>
                </li> -->
                </ul>
                <% } %>

                  <div class="border-t border-gray-200 px-4 py-6">
                    <h3 class="-mx-2 -my-3 flow-root">
                      <!-- Expand/collapse section button -->
                      <button type="button"
                        class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500"
                        aria-controls="filter-section-mobile-1" aria-expanded="false">
                        <span class="font-medium text-gray-900">Category</span>
                        <span class="ml-6 flex items-center">
                          <!-- Expand icon, show/hide based on section open state. -->
                          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path
                              d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                          </svg>
                          <!-- Collapse icon, show/hide based on section open state. -->
                          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd"
                              d="M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z"
                              clip-rule="evenodd" />
                          </svg>
                        </span>
                      </button>
                    </h3>
                    <!-- Filter section, show/hide based on section state. -->
                  </div>
            </form>
          </div>
        </div>
      </div>

      <main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div class="flex items-baseline justify-between border-b border-gray-200 pb-6 pt-24">
          <h1 class="text-4xl font-bold tracking-tight text-gray-900">Products</h1>

          <div class="flex items-center">

            <!-- Dropdown container -->
            <div class="relative inline-block text-left">

              <!-- Trigger button -->
              <button type="button"
                class="inline-flex justify-center items-center px-4 py-2 border border-transparent text-base font-medium rounded-md text-gray-700 hover:text-gray-900 bg-white"
                id="dropdown-button" aria-haspopup="true" aria-expanded="true">
                Sort
              </button>
            </div>
            <button type="button" class="-m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden">
              <span class="sr-only">Filters</span>
              <svg class="h-5 w-5" aria-hidden="true" aria-label="Filters" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd"
                  d="M2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z"
                  clip-rule="evenodd" />
              </svg>
            </button>
          </div>
        </div>

        <section aria-labelledby="products-heading" class="pb-24 pt-6">
          <h2 id="products-heading" class="sr-only">Products</h2>

          <div class="grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4">
            <!-- Filters -->
            <form class="hidden lg:block">
              <h3 class="sr-only">Categories</h3>
              <% for (let i=0; i < category.length; i++) { %>
                <ul role="list" class="space-y-4 border-b border-gray-200 pb-6 text-sm font-medium text-gray-900">
                  <li>
                    <a href="#" onclick="filterByCategory('<%= category[i]._id %>')">
                      <%= category[i].name %>
                    </a>
                  </li>
                </ul>
                <% } %>
            </form>

            <!-- Product grid -->
            <div class="lg:col-span-3">
              <div class="bg-white">
                <div class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8">
                  <h2 class="sr-only">Products</h2>



                  <div id="showproducts"
                    class="grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8">
                    <% for( let i=0; i < products.length; i++ ) { %>
                      <div class="group">


                        <a href="/product/<%= products[i]._id %>">
                          <div
                            class="aspect-h-1 aspect-w-1 w-full overflow-hidden rounded-lg bg-gray-200 xl:aspect-h-8 xl:aspect-w-7">
                            <img src="<%= products[i].images[0] %>"
                              alt="Tall slender porcelain bottle with natural clay textured body and cork stopper."
                              class="h-full w-full object-cover object-center group-hover:opacity-75">
                          </div>
                          <h3 class="mt-4 text-sm text-gray-700">
                            <%= products[i].name %>
                          </h3>
                          <p class="mt-1 text-lg font-medium text-gray-900">
                            <%= products[i].price %>
                          </p>
                        </a>
                        <div class="mt-4">
                          <a class="text-black bg-transparent border border-black hover:bg-black hover:text-white focus:ring-4 focus:outline-none focus:ring-black font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-transparent dark:hover:bg-black dark:hover:text-white dark:focus:ring-black dark:border-black"
                            onclick="addToCart('<%- products[i]._id %>')">
                            Add to cart
                          </a>


                        </div>

                      </div>

                      <% } %>
                  </div>

                </div>
              </div>

            </div>
          </div>
        </section>
      </main>
    </div>
  </div>
  <footer class="bg-gray-800 text-white p-4 text-center">
    <p>&copy;
      <script>
        document.write(new Date().getFullYear());
      </script> OtronMart E-Commerce. All rights reserved.
    </p>
  </footer>
  </div>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>

    document.getElementById('dropdown-button').addEventListener('click', function () {
      var dropdownMenu = document.getElementById('dropdown-menu');
      dropdownMenu.classList.toggle('hidden');
    });

    // Close dropdown when clicking outside of it
    window.addEventListener('click', function (event) {
      var dropdownMenu = document.getElementById('dropdown-menu');
      if (!event.target.closest('.relative') && !event.target.closest('.hidden')) {
        dropdownMenu.classList.add('hidden');
      }
    });

    const filtersButton = document.querySelector("svg[aria-label='Filters']");
    const offCanvasMenu = document.querySelector(".fixed.inset-0.z-40");
    const closeButton = offCanvasMenu.querySelector(".h-10.w-10");

    closeButton.addEventListener("click", () => {
      offCanvasMenu.classList.remove("translate-x-0");
      offCanvasMenu.classList.add("translate-x-full");
    });

    filtersButton.addEventListener("click", () => {
      offCanvasMenu.classList.remove("translate-x-full");
      offCanvasMenu.classList.add("translate-x-0");
      offCanvasMenu.setAttribute("aria-expanded", "true");
    });

    async function filterByCategory(selectedCategory) {
      try {
        const response = await axios.get(`/api/products?category=${selectedCategory}`);
        const filteredProducts = response.data;

        // console.log(filteredProducts);
        const productGrid = document.getElementById('showproducts')
        productGrid.innerHTML = '';

        for (let i = 0; i < filteredProducts.length; i++) {
          const productHTML = `
          <a href="/product/${filteredProducts[i]._id}" class="group">
      <div class="aspect-h-1 aspect-w-1 w-full overflow-hidden rounded-lg bg-gray-200 xl:aspect-h-8 xl:aspect-w-7">
        <img src="${filteredProducts[i].images[0]}"
          alt="Tall slender porcelain bottle with natural clay textured body and cork stopper."
          class="h-full w-full object-cover object-center group-hover:opacity-75">
      </div>
      <h3 class="mt-4 text-sm text-gray-700">
        ${filteredProducts[i].name}
      </h3>
      <p class="mt-1 text-lg font-medium text-gray-900">
        ${filteredProducts[i].price}
      </p>
    </a>`;
          productGrid.innerHTML += productHTML;
        }
      } catch (error) {
        console.error('Error fetching filtered products:', error);
      }
    }

    function addToCart(id) {
      axios
        .post("/api/addtocart", { id })
        .then((response) => {
          // console.log(response.data);
          // Check if the product was successfully added or already exists
          if (response.data.message === "Product already in cart") {
            const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              },
            });
            Toast.fire({
              icon: "success",
              title: "Product Already In Cart",
            });
            // Redirect the user to the cart page
            window.location.href = "/cart";
          } else if (response.data.message === "Please Login") {
            window.location.href = "/login";
          } else {
            const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              },
            });
            Toast.fire({
              icon: "success",
              title: "Product Added To Cart",
            });
            // console.log(response.data.message);
          }
        })
        .catch((error) => {
          // Handle error, log to console for simplicity
          console.error("Error:", error);
        });
    }

  </script>
</body>

</html>